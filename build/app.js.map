{"version":3,"sources":["../../node_modules/browserify/node_modules/browser-pack/_prelude.js","src/scripts/app.coffee"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","k =\n  BoostFactor: 3\n  MoveFactor: 20\nstate = {}\n\nstartGrind = (obj, rail) ->\n  state.info.dude.state = 'grinding'\n  railInfo = state.info.rail\n\n  # HACK: one-dimensional\n  positionOnRail = (obj.body.position.x - railInfo.path.x[0]) / railInfo.path.length\n  state.info.dude.grindInfo =\n    progressRate: railInfo.path.length / obj.body.velocity.x\n    rail: rail\n    railInfo: railInfo\n    velocity: obj.body.velocity.x\n  state.info.dude.grindInfo.progress = positionOnRail\n\n    # if state.info.dude.grindInfo.progressRate > 0\n    # then 0\n    # else 1\n\n  console.log 'pr', state.info.dude.grindInfo.progressRate\n  console.log \"length: #{railInfo.path.length} vel: #{obj.body.velocity.x}\"\n\ncanGrind = (obj, rail) ->\n  (state.info.dude.state isnt 'grinding') and\n    state.info.dude.canGrind and\n    obj.body.velocity.x != 0\n\npreload = (game) ->\n  game.load.image('sky', 'assets/sky.png')\n  game.load.image('ground', 'assets/platform.png')\n  game.load.image('star', 'assets/star.png')\n  game.load.spritesheet('dude', 'assets/dude.png', 32, 48)\n\ncreate = (game) ->\n  game.world.setBounds(0, 0, 1600, 1600)\n  game.physics.startSystem Phaser.Physics.ARCADE\n  game.time.advancedTiming = true\n\n  platforms = game.add.group()\n  platforms.enableBody = true\n\n  rails = do game.add.group\n  rails.enableBody = true\n\n  groundLevel = game.world.height - 64\n\n  ground = platforms.create(0, groundLevel, 'ground')\n  ground.body.immovable = true\n  ground.scale.setTo(8, 2)\n\n  rail = rails.create 200, groundLevel - 128, 'ground'\n  rail.body.immovable = true\n  rail.scale.setTo(1, 0.5)\n\n  player = game.add.sprite 32, game.world.height - 150, 'dude'\n  player.info = {}\n  game.physics.arcade.enable player\n  player.body.bounce.y = 0.2\n  player.body.gravity.y = 1000\n  player.body.collideWorldBounds = true\n\n  player.animations.add 'left', [0, 1, 2, 3], 10, true\n  player.animations.add 'right', [5, 6, 7, 8], 10, true\n\n  state =\n    player: player\n    info:\n      dude:\n        state: 'walking'\n        canGrind: true\n      rail:\n        path:\n          x: [ rail.left, rail.right ]\n          y: [ rail.top ]\n          length: rail.right - rail.left\n    platforms: platforms\n    rails: rails\n\n  player.anchor.setTo 0.5, 0.5\n  game.camera.follow player, Phaser.Camera.FOLLOW_PLATFORMER\n\nupdate = (game) ->\n  {player, platforms, rails} = state\n  key = game.input.keyboard.addKeys\n    'jump': Phaser.Keyboard.UP\n    'down': Phaser.Keyboard.DOWN\n    'left': Phaser.Keyboard.LEFT\n    'right': Phaser.Keyboard.RIGHT\n    'boost': Phaser.Keyboard.SHIFT\n    'debug': Phaser.Keyboard.D\n  startGrindCooldown = () ->\n    state.info.dude.canGrind = false\n    grindCooldown = game.time.create true\n    grindCooldown.add 100, () ->\n      state.info.dude.canGrind = true\n      grindCooldown.stop true\n    do grindCooldown.start\n\n  if key.debug.isDown\n    debugger\n\n  game.physics.arcade.collide player, platforms\n\n  if player.body.touching.down and state.info.dude.state is 'jumping'\n    state.info.dude.state = 'walking'\n\n  switch state.info.dude.state\n    when 'walking', 'jumping'\n      switch\n        when key.left.isDown\n          player.body.velocity.x += -k.MoveFactor\n          player.info.facingLeft = true\n          player.animations.play 'left'\n        when key.right.isDown\n          player.body.velocity.x += k.MoveFactor\n          player.info.facingLeft = false\n          player.animations.play 'right'\n        else\n          do player.animations.stop\n          player.frame = 4\n    when 'grinding'\n      grindInfo = state.info.dude.grindInfo\n\n      player.body.velocity.x = grindInfo.velocity\n      player.body.velocity.y = 0\n      grindInfo.progress += grindInfo.progressRate\n\n      if (grindInfo.progress > 1) or (grindInfo.progress < 0)\n        console.log grindInfo.progress\n        console.log 'end of rail'\n        state.info.dude.state = 'walking'\n        do startGrindCooldown\n      else\n        position =\n          x: game.math.linearInterpolation grindInfo.railInfo.path.x, grindInfo.progress\n          y: game.math.linearInterpolation grindInfo.railInfo.path.y, grindInfo.progress\n        player.body.position = position\n\n  key.jump.onDown.add () ->\n    if (state.info.dude.state is 'walking' || state.info.dude.state is 'grinding')\n      state.info.dude.state = 'jumping'\n      player.body.velocity.y = -600\n      do startGrindCooldown\n\n  if key.boost.isDown\n    player.body.velocity.x *= k.BoostFactor\n\n  game.physics.arcade.overlap player, rails, startGrind, canGrind, this\n\nnew Phaser.Game \\\n  800,\n  600,\n  Phaser.AUTO,\n  '',\n  preload: preload,\n  create: create,\n  update: update"]}